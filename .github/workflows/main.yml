name: Build Integrated Tool

on:
  push:
    paths:
      - '**.py'  # 匹配所有 Python 文件的更改
      - '**.spec'  # 匹配所有 spec 文件的更改
  pull_request:
    paths:
      - '**.py'  # 匹配所有 Python 文件的更改
      - '**.spec'  # 匹配所有 spec 文件的更改

jobs:
  build:
    runs-on: windows-latest
 
    steps:
    - uses: actions/checkout@v4
 
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
 
    - name: Install MinGW-w64
      run: |
        Invoke-WebRequest -Uri "https://github.com/niXman/mingw-builds-binaries/releases/download/13.2.0-rt_v11-rev0/x86_64-13.2.0-release-posix-seh-ucrt-rt_v11-rev0.7z" -OutFile "mingw64.7z"
        7z x mingw64.7z -oC:\
        echo "C:\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Append
        where windres

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller==5.13.2
        pip install pandas numpy openpyxl xlrd pillow tk
        pip install -r requirements.txt
        python -c "import sys; print('Python Path:', sys.path)"
        python -c "import os; print('Current Directory:', os.getcwd())"
        python -c "import os; print('Directory Contents:', os.listdir())"
 
    - name: Prepare Resource Files
      run: |
        Copy-Item favicon.ico -Destination app.ico
        Get-Content app.rc
        Get-ChildItem

    - name: Build App
      run: |
        dir
        python -c "import Bldbuy_Recon_UI; print('Successfully imported Bldbuy_Recon_UI')"
        python -c "import Product_Classification_Tool; print('Successfully imported Product_Classification_Tool')"
        python compile_rc.py
        pyinstaller --clean integrated_tool.spec
      env:
        CC: mingw32-gcc
        PYTHONPATH: .
 
    - name: Upload App
      uses: actions/upload-artifact@v4
      with:
        name: integrated_tool
        path: dist/Supplier_Reconciliation_Tools.exe